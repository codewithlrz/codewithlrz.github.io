[{"title":"第一讲-图的结构","url":"/2021/10/19/MIT-01-md/","content":"引言​    图机器学习是我博士期间研究方向，这篇博客会从头到尾详细描述我对于该领域的学习过程。理论部分我会通过学习视频课程和看教材来完成，MIT-CS224W-图机器学习这个分类是我用所看的视频课程的名字命名的，该课程是斯坦福的Jure老师在2021年冬季的课程，该课程也是最好的图机器学习启蒙课程，因此，我会对Jure老师的每一集课程都做一期复现与详解，以帮助自己和读者更好的理解这门课程。本文所有的图片以及公式将大量引用自Jure老师的PPT，在此对老师表示感谢，话不多说，开始第一次课程。\n一、Motivation for Graph ML​    图是描述与分析包含 关联（relations）或  相互作用（interactions）的实体的通用语言。    \n​    在日常生活中，我们身边许多的数据形式都是图结构。如下图所示，从左到右依次为自然图（natural graph）、基础设施图（infrastructure）、社交网络（social network）、知识图谱（knowledge graph）等诸多领域。\n\n​    不难看出，当前有两种大的数据类型可以表示为图，首先是网络（network），其次就是图（graph）\n​    Networks（Natural Graphs）：自然表示为图\n​        社交网络：社会是70亿人口的集合，那么每个人之间的联系就可以构成一个社交网络。\n​        通讯和交易：例如电子设备，电话通讯，金融交易等等。\n​        生物医学：例如身体中基因或蛋白质之间的相互作用。\n​        脑神经元链接：我们的思维就是由数以亿计的脑神经元链接并相互作用产生的。\n\n​    Graphs：作为一种表示形式\n​        信息或知识图谱：这些节点都是有组织有关联的。\n​        软件：软件也可以表示为图。\n​        相似性网络（similarity networks）：可以多次将数据点（datapoints）与相似的数据点相连构成相似性网络。\n​        具有关联结构：例如分子间结构，场景图，3D模拟等等。\n\n​    当我们了解图后，我们就要思考如何利用这些关联结构来进行预测呢？\n","categories":["MIT-CS224W-图机器学习"],"tags":["GNN","MIT","2019"]},{"title":"快速排序","url":"/2021/10/13/ds-sort-quicksort/","content":"一、排序原理​        快速排序，一种高级的排序方法，其实现过程是基于一种分治的思想。那么首先我们要了解，什么是分治。\n1.1 分治​        分治，顾名思义是分而治之，就是将一个复杂的规模为n的问题拆分为k个相同或相似的子问题（1&lt;=k&lt;n），同样再把这些子问题划分为更小的子问题，直至划分到的最小子问题能够简单到直接求解，然后我们再将这些个子问题合并，求得原问题的解。\n二、代码实现#include &lt;bits/stdc++.h>\nusing namespace std;\nvoid quick_sort(vector&lt;int>&amp; a,int left,int right)\n&#123;\n    if(left >= right)\n        return;\n    int i,j,base;\n    i = left,j = right;\n    base = a[left];\n    while(i&lt;j)\n    &#123;\n        while(a[j] >= base &amp;&amp; i &lt; j)\n            j--;\n        while(a[i] &lt;= base &amp;&amp; i &lt; j)\n            i++;\n        swap(a[i],a[j]);\n    &#125;\n    a[left] = a[i];\n    a[i] = base;\n    quick_sort(a,left,i-1);\n    quick_sort(a,i+1,right);\n&#125;\nint main() \n&#123;\n    std::vector&lt;int> a;\n    int n;\n    scanf(\"%d\",&amp;n);\n    for(int i = 0;i&lt;n;i++)\n    &#123;\n        int t;\n        scanf(\"%d\",&amp;t);\n        a.push_back(t);\n    &#125;\n    quick_sort(a,0,n-1);\n    for(int i = 0;i&lt;n;i++)\n    &#123;\n        cout&lt;&lt;a[i]&lt;&lt;\" \";\n    &#125;    \n    return 0;\n&#125;\n","categories":["数据结构与算法"],"tags":["排序","算法","数据结构"]},{"title":"第二讲-网络的性质和随机图模型","url":"/2021/10/12/GNN-MIT-02/","content":"","categories":["MIT-CS224W-图机器学习"],"tags":["GNN"]}]